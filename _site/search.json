[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "my posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nResume\n\n\n\nstem\n\n\ncareer\n\n\n\n\n\n\n\nSteven\n\n\nDec 6, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinear Regression\n\n\n\ndata\n\n\nanalysis\n\n\n\n\n\n\n\nSteven\n\n\nDec 6, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/linear regression/index.html",
    "href": "posts/linear regression/index.html",
    "title": "Linear Regression",
    "section": "",
    "text": "A Linear Regression Exercise & Visualization"
  },
  {
    "objectID": "posts/linear regression/index.html#hello-class-professor-and-ta.-below-is-a-quick-exercise-using-code-chunks-in-r.-we-will-be-completing-a-linear-regression-using-the-airquality-dataset-preloaded-in-r-r-studio",
    "href": "posts/linear regression/index.html#hello-class-professor-and-ta.-below-is-a-quick-exercise-using-code-chunks-in-r.-we-will-be-completing-a-linear-regression-using-the-airquality-dataset-preloaded-in-r-r-studio",
    "title": "Linear Regression",
    "section": "",
    "text": "# Install and Load Necessary Packages and Libraries\n\n# Install and load these required packages be removing the # sign. \n\n#install.packages(\"caret\")\nlibrary(caret)\n\nLoading required package: ggplot2\n\n\nLoading required package: lattice\n\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ purrr::lift()   masks caret::lift()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/linear regression/index.html#basic-statistical-analysis-steps",
    "href": "posts/linear regression/index.html#basic-statistical-analysis-steps",
    "title": "Linear Regression",
    "section": "Basic Statistical Analysis Steps",
    "text": "Basic Statistical Analysis Steps\n\n# This is the syntax we use to load the \"airquality\" dataset\ndata(airquality)\n\n# Call a summary of the data\nsummary(airquality)\n\n     Ozone           Solar.R           Wind             Temp      \n Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n 1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n 3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n NA's   :37       NA's   :7                                       \n     Month            Day      \n Min.   :5.000   Min.   : 1.0  \n 1st Qu.:6.000   1st Qu.: 8.0  \n Median :7.000   Median :16.0  \n Mean   :6.993   Mean   :15.8  \n 3rd Qu.:8.000   3rd Qu.:23.0  \n Max.   :9.000   Max.   :31.0  \n                               \n\n# Check the structure of the data\nstr(airquality)\n\n'data.frame':   153 obs. of  6 variables:\n $ Ozone  : int  41 36 12 18 NA 28 23 19 8 NA ...\n $ Solar.R: int  190 118 149 313 NA NA 299 99 19 194 ...\n $ Wind   : num  7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ...\n $ Temp   : int  67 72 74 62 56 66 65 59 61 69 ...\n $ Month  : int  5 5 5 5 5 5 5 5 5 5 ...\n $ Day    : int  1 2 3 4 5 6 7 8 9 10 ...\n\n# We see there are some NA values, lets print information about the missing values so we can replacement them\nprint(\"Missing values before replacement:\")\n\n[1] \"Missing values before replacement:\"\n\nprint(colSums(is.na(airquality)))\n\n  Ozone Solar.R    Wind    Temp   Month     Day \n     37       7       0       0       0       0 \n\n# Now that we have seen all the NA response, we will replace them with the mean for each variable\nairquality &lt;- airquality %&gt;%\n  mutate_all(~ ifelse(is.na(.), mean(., na.rm = TRUE), .))\n\n# Check observations for NA responses after our replacement with the mean\nprint(\"Missing values after replacement:\")\n\n[1] \"Missing values after replacement:\"\n\nprint(colSums(is.na(airquality)))\n\n  Ozone Solar.R    Wind    Temp   Month     Day \n      0       0       0       0       0       0 \n\n# Set a moderate seed for reproducibility\nset.seed(123)\n\n# Now we will split the data into a training and testing datasets\nsplit_index &lt;- createDataPartition(airquality$Temp, p = 0.7, list = FALSE)\ntrain_data &lt;- airquality[split_index, ]\ntest_data &lt;- airquality[-split_index, ]"
  },
  {
    "objectID": "posts/linear regression/index.html#simple-linear-regression-example",
    "href": "posts/linear regression/index.html#simple-linear-regression-example",
    "title": "Linear Regression",
    "section": "Simple Linear Regression Example",
    "text": "Simple Linear Regression Example\n\n# This is how we create a simple linear regression model using the training data\nlm_model &lt;- lm(Temp ~ Ozone, data = train_data)\n\n# This syntax allows us to make predictions based on the training data\ntrain_predictions &lt;- predict(lm_model, newdata = train_data)\n\n# Calculate Mean Square Prediction Error (MSPE) for the training model to gauge how well it predicts\nmspe_train &lt;- mean((train_data$Temp - train_predictions)^2)\nprint(paste(\"MSPE for Training Model:\", mspe_train))\n\n[1] \"MSPE for Training Model: 51.7474037510277\""
  },
  {
    "objectID": "posts/linear regression/index.html#predictions-on-testing-set",
    "href": "posts/linear regression/index.html#predictions-on-testing-set",
    "title": "Linear Regression",
    "section": "Predictions on Testing Set",
    "text": "Predictions on Testing Set\n\n# Predict the target variable on the testing set\ntest_predictions &lt;- predict(lm_model, newdata = test_data)\n\n# Calculate MSPE for the test model\nmspe_test &lt;- mean((test_data$Temp - test_predictions)^2)\nprint(paste(\"MSPE for Test Model:\", mspe_test))\n\n[1] \"MSPE for Test Model: 67.4051703292027\""
  },
  {
    "objectID": "posts/linear regression/index.html#visualization",
    "href": "posts/linear regression/index.html#visualization",
    "title": "Linear Regression",
    "section": "Visualization",
    "text": "Visualization\n\n# As an extra, here is a box plot of Temperature by Month\nwith(airquality, boxplot(Temp ~ Month, col = c(1,2,3,4,5)))\n\n\n\n\n\n# Lastly, here is a Scatterplot of Ozone vs. Temperature\nwith(airquality, plot(Ozone ~ Temp))"
  },
  {
    "objectID": "posts/Resume/index.html",
    "href": "posts/Resume/index.html",
    "title": "Resume",
    "section": "",
    "text": "A redacted version of my resume!\n\nFeel free to drop a message on my GitHub account!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "steven",
    "section": "",
    "text": "Hello all, this is a project I completed for my second Master’s degree. I enjoy soccer, machine learning / artificial intelligence, economics and food.\nEver since Chuck Lindsey from University at Buffalo told me I should incorporate a specialization to my burgeoning soft skills, learning how to interact with data in a meaningful way has been my passion.\nI hope you enjoyed reading this insight to my journey - please use my contact information in the top right-hand corner!"
  }
]